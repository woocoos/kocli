{{/* gotype: github.com/tsingsun/woocoo/cmd/woco/project.Graph */}}
{{ define "script/initdb" }}
//go:build ignore
package main

import (
	"context"
	"entgo.io/ent/dialect/sql/schema"
	"flag"
	"{{ .Config.Package }}/ent"
	"{{ .Config.Package }}/ent/migrate"
	"log"

	_ "github.com/go-sql-driver/mysql"
)

// receive two arguments: the migration name and the database dsn.
var (
	dsn  = flag.String("dsn", "root:@tcp(localhost:3306)/{{ .Config.Package }}", "")
	name = flag.String("name", "mysql", "driver name")
)

func main() {
    flag.Parse()
	client, err := ent.Open(*name, *dsn)
	if err != nil {
		log.Fatalf("failed connecting to mysql: %v", err)
	}
	defer client.Close()
	ctx := context.Background()
	// Run migration.
	err = client.Schema.Create(
		ctx,
		migrate.WithDropIndex(true),
		migrate.WithDropColumn(true),
		migrate.WithForeignKeys(false),
		entx.SkipTablesDiffHook("table_name"),
	    )
	if err != nil {
		log.Fatalf("failed creating schema resources: %v", err)
	}
}

{{ end }}

{{ define "test/test" }}
{{ with $.Header }}{{ . }}{{ end }}
package test

import (
	"errors"
	"os"
	"path/filepath"
	"runtime"
)

// basedir is the root directory of this package.
var (
	basedir           string
	DefaultConfigFile = "etc/app.yaml"
	EtcdAddr          = "127.0.0.1:2379"
)

func init() {
	_, currentFile, _, ok := runtime.Caller(0)
	if !ok {
		panic(errors.New("runtime.Caller error at test init"))
	}
	basedir = filepath.Dir(currentFile)
}

func BaseDir() string {
	return basedir
}

// Path returns the absolute path the given relative file or directory path,
// relative to the google.golang.org/hello_grpc/testdata directory in the user's GOPATH.
// If rel is already absolute, it is returned unmodified.
func Path(rel string) string {
	if filepath.IsAbs(rel) {
		return rel
	}

	return filepath.Join(basedir, rel)
}

func Tmp(rel string) string {
	if filepath.IsAbs(rel) {
		return rel
	}

	tmpPath := filepath.Join(filepath.Dir(basedir), "tmp")
	if err := os.MkdirAll(tmpPath, 0755); err != nil {
		panic(err)
	}
	return filepath.Join(tmpPath, rel)
}

{{ end }}