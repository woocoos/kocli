{{/* gotype: github.com/tsingsun/woocoo/cmd/woco/project.Graph */}}

{{ define "cmd/main" }}

{{ with $.Header }}{{ . }}{{ end }}
package main

import(
	"github.com/woocoos/knockout-go/ent/clientx"
	"github.com/woocoos/knockout-go/pkg/koapp"
	"{{ .Config.Package }}/api/graphql"

	_ "github.com/go-sql-driver/mysql"
	_ "github.com/woocoos/knockout-go/pkg/snowflake"
	_ "{{ .Config.Package }}/ent/runtime"
)

func main(){
var err error
	app := koapp.New()
	cnf := app.AppConfiguration()

	ents := koapp.BuildEntComponents(cnf)
	drv,ok := ents["{{ pkgName $.Package }}"]
	if !ok {
    	panic("store: {{ pkgName $.Package }} not found")
    }
	db := ent.NewClient(ent.Driver(drv))
	if cnf.Development {
		db = db.Debug()
	}
	defer db.Close()

	so := graphql.ServerOption{
		DB: db,
	}
	if cnf.IsSet("kosdk") {
		if so.KOSDK, err = api.NewSDK(cnf.Sub("kosdk")); err != nil {
			panic(err)
		}
	}

	rmsSvr, err := graphql.NewServer(app, so)
	if err != nil {
		panic(err)
	}

	app.RegisterServer(rmsSvr, clientx.ChangeSet)
	if err = app.Run(); err != nil {
		panic(err)
	}
}

{{ end }}